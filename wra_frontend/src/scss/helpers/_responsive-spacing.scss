@mixin _wra-responsive-spacing($responsive-spacing-point, $property, $direction: "all", $important: false, $adjustment: false) {

  // Make sure that the return value from `_settings/spacing.scss` is a map.
  $scale-map: map-get($wra-spacing-responsive-scale, $responsive-spacing-point);
  $actual-map-type: type-of($scale-map);
  @if $actual-map-type != "map" {
    @error "Expected a number (integer), but got a "
    + "#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)";
  }

  // Loop through each breakpoint in the map
  @each $breakpoint, $breakpoint-value in $scale-map {

    @if $adjustment {
      $breakpoint-value: $breakpoint-value + $adjustment;
    }

    // The 'null' breakpoint is for mobile.
    @if not $breakpoint {
      #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);
    } @else {
      @include mq($from: $breakpoint) {
        @if $direction == all {
          #{$property}: $breakpoint-value if($important, !important, null);
        } @else {
          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);
        }
      }
    }
  }
}